What happens when you initialize a repository? Why do you need to do it?
When you initialise a repository, you set up a directory which Git can use to keep track of the files you want it to.
You need to do this so Git knows what you want to include - after you tell it explicitly.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area works between the working directory and the repository.
It provides a space in which to gather the documents you want to include in a single commit.

How can you use the staging area to make sure you have one commit per logical change?
Take care which files you add there and commit carefully.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches useful when you want to try something out
whilst keeping the original intact, e.g an experimental change.

How do the diagrams help you visualize the branch structure?
They let you see which commits belong in which branch. Are they available as standard in the GUI version?

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging 2 branches creates a single branch with the changes merged together.
Represented diagramatically with a "parent" to each original branch to show the history clearly.

